spring.shardingsphere.datasource.names=ds0,ds1,ds2
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.password=dingding123456
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/root?useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.ds0.username=root

spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.password=dingding123456
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/root1?useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.ds1.username=root1

spring.shardingsphere.datasource.ds2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds2.password=dingding123456
spring.shardingsphere.datasource.ds2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds2.url=jdbc:mysql://localhost:3307/root?useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.ds2.username=root

spring.shardingsphere.props.sql.show=true



spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.algorithm-expression=ds$->{ order_id % 2}
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.order_detail.actual-data-nodes=ds$->{0..1}.order_detail
spring.shardingsphere.sharding.tables.order_detail.database-strategy.inline.algorithm-expression=ds$->{ order_id % 2}
spring.shardingsphere.sharding.tables.order_detail.database-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.order_detail.key-generator.column=detail_id
spring.shardingsphere.sharding.tables.order_detail.key-generator.type=SNOWFLAKE

# todo 如果有200张表，进行分表分库，那么我就需要200张表进行配置吗？




# 读写分离
spring.shardingsphere.masterslave.load-balance-algorithm-type=round_robin
spring.shardingsphere.masterslave.name=ms
spring.shardingsphere.masterslave.master-data-source-name=ds0
spring.shardingsphere.masterslave.slave-data-source-names=ds2

spring.shardingsphere.sharding.tables.user.actual-data-nodes=ds0.user
#spring.shardingsphere.sharding.tables.user.database-strategy.inline.algorithm-expression=ds$->{ id % 2}
#spring.shardingsphere.sharding.tables.user.database-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user$->{id%2}
#spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=id




#
##防止出现关联查询笛卡尔积
spring.shardingsphere.sharding.binding-tables[0]=t_order,order_detail



#广播配置，一般都是配置信息表居多，数据量小，需要配合每个数据库进行关联查询
spring.shardingsphere.sharding.broadcast-tables=config
